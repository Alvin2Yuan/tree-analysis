<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.slong.tools</groupId>
  <artifactId>tree-analysis</artifactId>
  <version>1.0</version>
  <packaging>jar</packaging>

  <name>tree-analysis</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <proguard.version>7.1.1</proguard.version>
    <proguard.maven.plugin.version>2.5.1</proguard.maven.plugin.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.xerial</groupId>
      <artifactId>sqlite-jdbc</artifactId>
      <version>3.41.2.1</version>
    </dependency>
    <dependency>
      <groupId>cn.hutool</groupId>
      <artifactId>hutool-poi</artifactId>
      <version>5.8.18</version>
    </dependency>

    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>4.1.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.20.0</version>
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>2.0.31</version>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.13.0</version>
    </dependency>
    <dependency>
      <groupId>com.slong.auth</groupId>
      <artifactId>auth-client</artifactId>
      <version>1.0</version>
    </dependency>
  </dependencies>
  <build>
  <plugins>
    <plugin>
      <groupId>com.github.wvengen</groupId>
      <artifactId>proguard-maven-plugin</artifactId>
      <version>${proguard.maven.plugin.version}</version>
      <executions>
        <execution>
          <phase>package</phase>
          <goals>
            <goal>proguard</goal>
          </goals>
        </execution>
      </executions>
      <configuration>
        <proguardVersion>${proguard.version}</proguardVersion>
        <injar>${project.build.finalName}.jar</injar>
        <outjar>${project.build.finalName}.jar</outjar>
        <obfuscate>true</obfuscate>
        <options>
          <option>-dontshrink</option>
          <option>-dontoptimize</option>
          <!-- 此选项将用新的类名替换反射方法调用中的所有字符串。例如，调用Class.forName('className')-->
          <option>-adaptclassstrings</option>
          <!-- 此选项将保存所有原始注解等。否则，将从文件中删除所有注解。-->
          <option>-keepattributes
            Exceptions,
            InnerClasses,
            Signature,
            Deprecated,
            SourceFile,
            LineNumberTable,
            *Annotation*,
            EnclosingMethod
          </option>
          <!-- 此选项将保存接口中的所有原始名称（不混淆）-->
          <option>-keepnames interface **</option>
          <!-- 此选项将将所有原始方法参数-->
          <option>-keepparameternames</option>
          <!-- 此选项将保存所有原始类文件（不混淆），一般是混淆领域或者服务包中的文件。-->
          <option>-keep
            class com.slong.tools.App {
            public static void main(java.lang.String[]);
            }
          </option>
          <!-- 此选项忽略警告，例如重复的类定义和命名不正确的文件中的类-->
          <option>-ignorewarnings</option>
          <!-- 此选项将保存服务包中的所有原始类文件（不进行混淆）-->
          <!-- <option>-keep class com.slong.proguard.service { *; }</option>-->
          <!-- 此选项将保存所有软件包中的所有原始接口文件（不进行混淆）-->
          <option>-keep interface * extends * { *; }</option>
          <!-- 此选项将保存所有包中所有类中的所有原始定义的注解-->
          <option>-keep class com.fasterxml.jackson.** { *; }</option>
          <option>-keep class org.json.JSONObject.** {** put(java.lang.String,java.util.Map);}</option>
          <option>-dontwarn com.fasterxml.jackson.databind.**</option>
          <option>-dontwarn com.fasterxml.jackson.**</option>
        </options>
        <injarNotExistsSkip>true</injarNotExistsSkip>
        <libs>
          <lib>${java.home}/lib/rt.jar</lib>
        </libs>
      </configuration>
      <dependencies>
        <dependency>
          <groupId>com.guardsquare</groupId>
          <artifactId>proguard-base</artifactId>
          <version>${proguard.version}</version>
        </dependency>
      </dependencies>
    </plugin>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-assembly-plugin</artifactId>
      <version>3.2.0</version>
      <configuration>
        <appendAssemblyId>false</appendAssemblyId>
        <archive>
          <manifest>
            <mainClass>com.slong.tools.App</mainClass>
          </manifest>
        </archive>
        <descriptorRefs>
          <descriptorRef>jar-with-dependencies</descriptorRef>
        </descriptorRefs>

      </configuration>
      <executions>
        <execution>
          <id>make-assembly</id>
          <phase>package</phase>
          <goals>
            <goal>single</goal>
          </goals>
        </execution>
      </executions>
    </plugin>
  </plugins>
</build>
<!--  <transformer-->
<!--          implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">-->
<!--    <resource>META-INF/services/java.sql.Driver</resource>-->
<!--  </transformer>-->
</project>
